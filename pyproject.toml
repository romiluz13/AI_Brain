[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ai-brain-python"
version = "0.1.0"
description = "Universal AI Brain - Python implementation with multi-framework support"
authors = ["AI Brain Team <team@aibrain.dev>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/romiluz13/AI_Brain"
repository = "https://github.com/romiluz13/AI_Brain"
documentation = "https://github.com/romiluz13/AI_Brain/blob/main/docs/API_REFERENCE.md"
keywords = ["ai", "cognitive-systems", "multi-agent", "framework-agnostic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5"
motor = "^3.3"
pymongo = "^4.6"
numpy = "^1.24"
asyncio = "^3.11"
typing-extensions = "^4.8"

# Framework dependencies
crewai = "^0.28"
pydantic-ai = "^0.0.12"
agno = "^0.0.13"
langchain = "^0.1"
langgraph = "^0.0.40"

# Additional core dependencies
fastapi = "^0.104"
uvicorn = "^0.24"
redis = "^5.0"
celery = "^5.3"
prometheus-client = "^0.19"
structlog = "^23.2"
tenacity = "^8.2"
httpx = "^0.25"

# Optional dependencies for specific features
pillow = { version = "^10.1", optional = true }
opencv-python = { version = "^4.8", optional = true }
torch = { version = "^2.1", optional = true }
transformers = { version = "^4.35", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-asyncio = "^0.21"
pytest-cov = "^4.1"
pytest-mock = "^3.12"
black = "^23.11"
isort = "^5.12"
mypy = "^1.7"
flake8 = "^6.1"
pre-commit = "^3.5"
sphinx = "^7.2"
sphinx-rtd-theme = "^1.3"
mkdocs = "^1.5"
mkdocs-material = "^9.4"

[tool.poetry.extras]
multimodal = ["pillow", "opencv-python"]
ml = ["torch", "transformers"]
all = ["pillow", "opencv-python", "torch", "transformers"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_brain_python"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "crewai.*",
    "agno.*",
    "motor.*",
    "pymongo.*",
    "redis.*",
    "celery.*",
    "prometheus_client.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "slow: Slow running tests",
    "crewai: CrewAI framework tests",
    "pydantic_ai: Pydantic AI framework tests",
    "agno: Agno framework tests",
    "langchain: LangChain framework tests",
    "langgraph: LangGraph framework tests"
]

[tool.coverage.run]
source = ["ai_brain_python"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
